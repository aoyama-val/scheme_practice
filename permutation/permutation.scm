(define (permutation lis)
  (cond ((null? lis) '(()))
        (else (reduce-right append '() (map (lambda (x)
                            (map (lambda (y) (cons x y))
                                 (permutation (delete x lis))))
                            lis)))))

(display (permutation '()))
(newline)
(display (permutation '(1)))
(newline)
(display (permutation '(1 2)))
(newline)
(display (permutation '(1 2 3)))
(newline)
(display (permutation '(1 2 3 4)))
(newline)
(display (reduce append '() '((1) (2) (3) (4))))
(newline)

