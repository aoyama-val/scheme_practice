(define (include? lis a)
  (cond ((null? lis) #f)
        ((= (car lis) a) #t)
        (else (include? (cdr lis) a))))

(display (include? '(1 2 3) 1)) (newline)
(display (include? '(1 2 3) 2)) (newline)
(display (include? '(1 2 3) 3)) (newline)
(display (include? '(1 2 3) 4)) (newline)
(define (unique lis)
  (cond ((null? lis) '())
        ((include? (cdr lis) (car lis)) (unique (cdr lis)))
        (else (cons (car lis) (unique (cdr lis))))))

(display (unique '())) (newline)
(display (unique '(1))) (newline)
(display (unique '(1 2 3))) (newline)
(display (unique '(1 1 2 2 3 3 1 2 3))) (newline)
(display (unique '(3 1 2 3 3 1 2))) (newline)
