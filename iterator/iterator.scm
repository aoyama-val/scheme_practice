; フィボナッチ数のイテレータ
(define (make-fib-iter)
  (let ((a 1) (b 1))
    (lambda ()
      (begin0
        (+ a b)
        (let ((olda a))
          (set! a b)
          (set! b (+ olda b)))
        ))))

(define it (make-fib-iter))
(display (it)) (newline)
(display (it)) (newline)
(display (it)) (newline)
(display (it)) (newline)
(display (it)) (newline)
(display (it)) (newline)
(display (it)) (newline)
(display (it)) (newline)

; 線形合同法による乱数ジェネレータ
(define (myrand seed)
  (let ((init seed) (a 69069) (b 123815121) (m 409801984))
    (lambda ()
      (let ((next (mod (+ (* init a) b) m)))
        (set! init next)
        next))))

(define r1 (myrand 8))
(display (r1)) (newline)
(display (r1)) (newline)
(display (r1)) (newline)
(display (r1)) (newline)
(display (r1)) (newline)
(display (r1)) (newline)
(newline)
(define r2 (myrand 1231424))
(display (r2)) (newline)
(display (r2)) (newline)
(display (r2)) (newline)
(display (r2)) (newline)
(display (r2)) (newline)
(display (r2)) (newline)
(newline)
